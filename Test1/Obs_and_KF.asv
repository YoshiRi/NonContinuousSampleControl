% ÉçÉnå^Ç≈Ç‚ÇËÇ‹Ç∑
%%
% Already know A,B,...

Ao = [1 st 0; 0 1 st; 0 0 1];
xest = zeros(3,ylen);
xest_c = zeros(3,len/Srate);
xest_r = zeros(3,ylen);
poles = -[10*2*pi 13*2*pi 15*2*pi];
zpoles = exp(poles*st);
K = place(Ao',(C*Ao)',zpoles).';

% constant
for i = 2:len/Srate
    err = C*x(:,(i)*Srate) - C * Ao * xest_c(:,i-1);
    xest_c(:,i) = Ao * xest_c(:,i-1) + K * err;
end


% non-constant
for i = 2:ylen
     err = y(:,i)- C*Ao*xest(:,i-1);
    xest(:,i) = Ao * xest(:,i-1) + K * err;
end

% 
for i = 2:ylen
    td =  dt*(random_sampling(i)-random_sampling(i-1));
    Ar = [1 td 0; 0 1 td; 0 0 1];

    err = C*x(:,random_sampling(i)) - C * Ar* xest_r(:,i-1);
    Kr = place(Ar',(C*Ar)',exp(poles*td) ).';
    xest_r(:,i) = Ar * xest_r(:,i-1) + Kr * err;
end


%% KF

Pinit = 10000*eye(3);
s_sys =  0.01;
s_obs = 0.1;

xest_kf = zeros(1,ylen);
P = zeros(3,3,ylen);
P(:,:,1)=Pinit;
for i = 2:ylen
    err = C*x(:,random_sampling(i-1)) - C * xest_kf(:,i-1);
    td =  dt*(random_sampling(i)-random_sampling(i-1));
    Ar = [1 td 0; 0 1 td; 0 0 1];
    Br = [0;td;td*td/2]*s_sys;
    xe = Ar * xest_kf(:,i-1) + Kr * err;
    Pe = Ar * P(:,:,i-1) * Ar' + Br'*Br;
    ytrue = C*x(:,random_sampling(i))
    
    Kf = Pe*C/(C*Pe*C'+s_obs);
    xest_kf(:,i) = xe + K*(yture-C*xe);
    P(:,:,i) = P()
    
end
